name: Project linting
# This workflow is triggered on pushes and PRs to the repository.
# It runs the `nf-core lint` and markdown lint tests to ensure
# that the code meets the nf-core guidelines.
on:
  push:
    branches:
      - dev
      - version2
  pull_request:
  release:
    types: [published]

jobs:
  Prettier:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3

      - name: Install Prettier
        run: npm install -g prettier

      - name: Run Prettier --check
        run: prettier --check ${GITHUB_WORKSPACE}

  PythonBlack:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Check code lints with Black
        uses: psf/black@23.12.1
        with:
          options: "--check --verbose"

      # If the above check failed, post a comment on the PR explaining the failure
      - name: Post PR comment
        if: failure()
        uses: mshick/add-pr-comment@v1
        with:
          message: |
            ## Python linting (`black`) is failing

            To keep the code consistent with lots of contributors, we run automated code consistency checks.
            To fix this CI test, please run:

            * Install [`black`](https://black.readthedocs.io/en/stable/): `pip install black`
            * Fix formatting errors in your pipeline: `black .`

            Once you push these changes the test should pass, and you can hide this comment :+1:

            We highly recommend setting up Black in your code editor so that this formatting is done automatically on save. Ask about it on Slack for help!

          repo-token: ${{ secrets.GITHUB_TOKEN }}
          allow-repeats: false

  SummaryStats:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          architecture: "x64"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run SummaryStats
        run: |
          python3.10 src/treeval/scripts/test_run.py -d treeval-summary-files/1-1-0-runs-5/

      - name: Save PR number
        if: ${{ always() }}
        run: echo ${{ github.event.pull_request.number }} > PR_number.txt

      - name: Upload linting log file artifact
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: linting-logs
          path: |
            lint_log.txt
            lint_results.md
            PR_number.txt
